apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'jacoco'

group = 'com.magneto'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

allprojects {

    repositories {
        mavenCentral()
    }

    project.ext.springboottest = ["org.springframework.boot:spring-boot-starter-test:${springBootVersion}"]
    project.ext.springbootweb = ["org.springframework.boot:spring-boot-starter-web:${springBootVersion}"]
    project.ext.springbootundertow = ["org.springframework.boot:spring-boot-starter-undertow:${springBootVersion}"]
    project.ext.springdevtools = ["org.springframework.boot:spring-boot-devtools:${springBootVersion}"]
    project.ext.springbootjdbc = ["org.springframework.boot:spring-boot-starter-jdbc:${springBootVersion}"]
    project.ext.springtxt = [
            "org.springframework:spring-tx:${springVersion}",
            "org.springframework:spring-context:${springVersion}"
    ]
    project.ext.springbootstarteractuator = ["org.springframework.boot:spring-boot-starter-actuator:${springBootVersion}"]

    project.ext.h2 = ["com.h2database:h2:1.4.200"]
    project.ext.lombok = ["org.projectlombok:lombok:1.18.12"]

    project.ext.apachecommons = [
            "commons-io:commons-io:2.6",
            "org.apache.commons:commons-lang3:3.7"
    ]

    project.ext.openapi = [
            "org.springdoc:springdoc-openapi-ui:1.4.1"
    ]

    project.ext.hazelcast = ["com.hazelcast:hazelcast:4.1"]
}

buildscript {
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

dependencies {
    implementation project.ext.springbootweb
    implementation project.ext.springbootundertow

    implementation project(':query:query-infrastructure')
    implementation project(':command:command-infrastructure')

    configurations {
        runtime.exclude module: 'spring-boot-starter-tomcat'
        compile.exclude module: 'spring-boot-starter-tomcat'
    }
}

subprojects {
    apply plugin: 'java-library'
    apply plugin: 'jacoco'

    test {
        useJUnit()
        reports.html.enabled = false
        reports.junitXml.enabled = true
        reports.junitXml.destination = file("$buildDir${testResultsPath}")
    }
}